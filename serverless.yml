# serverless.yml
service: aws-ug-telegrambot-service
plugins:
  - serverless-offline
  - serverless-esbuild
custom:
  serverless-offline:
    port: 8000
  esbuild: 
    bundle: true
provider:
  name: aws
  runtime: nodejs16.x
  stage: ${opt:stage, 'dev'}
  region: ap-south-1
  memorySize: 512 # optional, in MB, default is 1024
  timeout: 10 # optional, in seconds, default is 6
  versionFunctions: false # optional, default is true
  logRetentionInDays: 7
  # tracing:
    # lambda: true # optional, enables tracing for all functions (can be true (true equals 'Active') 'Active' or 'PassThrough')

functions:
  botHandler:
    handler: src/functions/botHandlerMain.handler # required, handler set in AWS Lambda
    events:
      - http:
          path: /botHandler
          method: post
          cors: true
    # name: ${sls:stage}-lambdaName # optional, Deployed Lambda name
    # description: Description of what the lambda function does # optional, Description to publish to AWS
    # runtime: nodejs16.x # optional overwrite, default is provider runtime
    # memorySize: 512 # optional, in MB, default is 1024
    # timeout: 10 # optional, in seconds, default is 6
    # provisionedConcurrency: 3 # optional, Count of provisioned lambda instances
    # reservedConcurrency: 5 # optional, reserved concurrency limit for this function. By default, AWS uses account concurrency limit
    # tracing: PassThrough # optional, overwrite, can be 'Active' or 'PassThrough'